---
swagger: '2.0'
info:
  description: This is Koach application's API specification.
  version: 1.0.0
  title: Koach APIs
host: localhost:3000
basePath: "/"
schemes:
- https
tags:
  - name: Auth
    description: Authenticate user
  - name: User
    description: User related api
securityDefinitions:
  Bearer:
    description: Example value:- Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjU5MmQwMGJhNTJjYjJjM
    type: apiKey
    name: Authorization
    in: header
paths:
  "/auth":
    post:
      tags:
      - Auth
      summary: Authenticate user
      description: Authenticate user API
      operationId: authUser
      produces:
      - application/json
      parameters:
      - in: body
        name: user
        description: User's crecredentials
        required: true
        schema:
          type: object
          required:
          - username
          - password
          properties:
            username:
              type: string
            password:
              type: string
              format: password
      responses:
        '200':
          description: Auth successful
          schema:
            type: object
            properties:
              user:
                type: object
                properties:
                  username:
                    type: string
                  _id:
                    type: string
              token:
                type: string
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
  "/users":
    post:
      tags:
      - Users
      summary: Create user
      description: Create user API
      operationId: createUser
      produces:
      - application/json
      parameters:
      - name: User details
        in: body
        required: true
        description: 'User details'
        schema:
          type: object
          properties:
            user:
              type: object
              properties:
                name:
                  descrpition: 'Name'
                  type: string
                username:
                  description: 'Username'
                  type: string
                password:
                  description: 'Password'
                  type: string
              required:
              - name
              - username
              - password
          required:
          - user
      responses:
        '200':
          description: User created
          schema:
            type: object
            properties:
              user:
                type: object
                properties:
                  username:
                    type: string
                  name:
                    type: string
                  _id:
                    type: string
        '422':
          description: Unprocessable Entity
    get:
      tags:
      - Users
      security:
      - Bearer: []
      summary: Get all users
      description: Get Users
      operationId: getUsers
      produces:
      - application/json
      responses:
        '200':
          type: array
          items:
            type: object
            properties:
              _id:
                type: string
              name:
                type: string
              username:
                type: string
        '401': 
          description: Unauthorized
  "/users/{id}":
    get:
      tags:
      - Users
      security:
      - Bearer: []
      summary: Get user
      description: Get User
      operationId: getUser
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        type: string
        required: true
        description: 'User id'
      responses:
        '200':
          type: object
          properties:
            _id:
              type: string
            name:
              type: string
            username:
              type: string
        '401': 
          description: Unauthorized
        '422':
          description: Unprocessable Entity
    put:
      tags:
      - Users
      security:
      - Bearer: []
      summary: Update user
      description: Update User
      operationId: updateUser
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        type: string
        required: true
        description: 'User id'
      - name: User details
        in: body
        required: true
        description: 'User details'
        schema:
          type: object
          properties:
            user:
              type: object
              properties:
                name:
                  descrpition: 'Name'
                  type: string
                username:
                  description: 'Username'
                  type: string
                password:
                  description: 'Password'
                  type: string
          required:
          - user
      responses:
        '200':
          type: object
          properties:
            _id:
              type: string
            name:
              type: string
            username:
              type: string
        '401': 
          description: Unauthorized
        '422':
          description: Unprocessable Entity
    delete:
      tags:
      - Users
      security:
      - Bearer: []
      summary: Delete user
      description: Delete User
      operationId: deleteUser
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        type: string
        required: true
        description: 'User id'
      responses:
        '200':
          type: object
          properties:
            success:
              type: boolean
        '401': 
          description: Unauthorized
        '422':
          description: Unprocessable Entity